#!/usr/bin/env ruby
require 'pathname'
require 'tempfile'
require 'cgi'
require 'kconv'
require 'singleton'
require 'base64'

self_file =
  if File.symlink?(__FILE__)
    require 'pathname'
    Pathname.new(__FILE__).realpath
  else
    __FILE__
  end
$:.unshift(File.dirname(self_file) + "/../lib")

require 'few'
include Few::Util

require_monad :rubygems, :markdown

case ARGV[0]
when '-h', '--help'
  puts <<-EOH
[USAGE]: few [option] [filename]
[EXAMPLE]:
  few foobar.txt
  make test | few
  make |& few --tee
[ARGUMENTS]:
  --version, -v       | Show version information.
  --selfupdate        | Update few. This feature is disabled temporally. :-(
  --filetype=         | Set filetype. Filetype feature will be used for style.
  --tee, -t, -T       | Put strings to terminal, then open it to browser.
  --server, -r, -s    | Start server and standing for remote.
  --server-daemon, -d | Start --server and daemonize myself.
  --gen-key           | Generate key pair for remote feature.
  EOH
when '-v', '--version'
  puts "0.0.3"
when '--selfupdate'
  puts "This feature is temporally disabled."
  require 'open-uri'
  code =
    open('http://github.com/ujihisa/few/raw/master/bin/few') {|io| io.read }
  raise unless /^#!/ =~ code
  File.open(__FILE__, 'w') {|io| io.print code }
  system __FILE__, '-v'
when /--filetype=(\w+)/
  ARGV.shift
  Few(:filetype => $1.to_sym)
when '--tee', '-t', '-T'
  ARGV.shift
  Few(:tee => true, :filetype => :tee)
when '--remote-standing', '-r', '--server', '-s'
  Few.new(:remote_standing => true).start
when '--remote-daemon', '-d','--daemon-standing', '--server-daemon'
  Few.new(:remote_standing => true).start(true)
when '--gen-keys', '--generate-keys', '--generate-key-pair', '--gen-key'
  print 'Generating new key pair for remote... '
  f = Few.new.generate_remote_key_pair
  puts 'done.'
  puts "Send #{f.fewdir(f.config.public_key)} to remote host ~/.few ~/fewfiles, and write `config.remote = true` to remote ~/.fewrc ."
  puts 'To standby to recieve, start few with `-r` or `-d` (-r with daemon) option.'
else
  Few()
end
# vim: set filetype=ruby : set tabstop=2 : set shiftwidth=2
